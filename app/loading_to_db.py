import asynciofrom sqlalchemy import selectfrom models.database import get_dbfrom services.APIs import load_currency_data, load_bond_datafrom models import models, schemasasync def load_currency_to_db():    currency_data = await load_currency_data()    async for db in get_db():        async with db:            for currency_dict in currency_data:                curr_df = schemas.Currency(**currency_dict)                db_currencies = models.Currency(**curr_df.dict())                db.add(db_currencies)                await db.commit()async def load_bonds_to_db():    async for db in get_db():        async with db:            result = await db.execute(                select(                    models.Currency.currency_code,                    models.Currency.curs                )            )            data = [row for row in result]            curr_dict = dict(data)            bonds_data = await load_bond_data(curr_dict=curr_dict)            for bond_dict in bonds_data:                bond_df = schemas.BondInfo(**bond_dict)                db_bonds = models.Bond(**bond_df.dict())                db.add(db_bonds)                await db.commit()# asyncio.run(load_currency_to_db())asyncio.run(load_bonds_to_db())